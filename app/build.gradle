apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"
    defaultConfig {
        applicationId "com.mohseen78.countryfacts"
        minSdkVersion 25
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    dataBinding {
        enabled = true
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$version_kotlin"
    implementation "androidx.core:core-ktx:$version_core_ktx"

    // AndroidX Support libraries
    implementation "androidx.appcompat:appcompat:$version_appcompat"
    implementation "androidx.constraintlayout:constraintlayout:$version_constraintlayout"
    implementation "androidx.recyclerview:recyclerview:$version_recyclerview"
    implementation "androidx.fragment:fragment-ktx:$version_fragment"

    // Material Design
    implementation "com.google.android.material:material:$version_material_design"

    // Navigation
    implementation "androidx.navigation:navigation-fragment-ktx:$version_navigation"
    implementation "androidx.navigation:navigation-ui-ktx:$version_navigation"

    // Lifecycle, ViewModel and LiveData
    implementation "androidx.lifecycle:lifecycle-extensions:$version_lifecycle_extensions"

    // Moshi
    implementation "com.squareup.moshi:moshi:$version_moshi"
    implementation "com.squareup.moshi:moshi-kotlin:$version_moshi"

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$version_retrofit"

    // Retrofit with Moshi Converter
    implementation "com.squareup.retrofit2:converter-moshi:$version_retrofit"

    // Glide
    implementation "com.github.bumptech.glide:glide:$version_glide"
    
    //Test
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    //  Unit tests
    testImplementation "junit:junit:$version_junit"
    testImplementation "org.hamcrest:hamcrest-all:$version_hamcrest"
    testImplementation "androidx.arch.core:core-testing:$version_archTesting"
    testImplementation "org.robolectric:robolectric:$version_robolectric"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$version_coroutines"

    // Android instrumented unit tests
    androidTestImplementation "junit:junit:$version_junit"
    androidTestImplementation "androidx.arch.core:core-testing:$version_archTesting"
    androidTestImplementation "org.mockito:mockito-core:$version_mockito"
    androidTestImplementation "com.linkedin.dexmaker:dexmaker-mockito:$version_dexMaker"
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$version_coroutines"

    // Testing Fragment Scenario
    implementation "androidx.fragment:fragment-testing:$version_fragmentTest"
    implementation "androidx.test:core:$version_androidXTestCore"

    // AndroidX Test - JVM testing
    testImplementation "androidx.test:core-ktx:$version_androidXTestCore"
    testImplementation "androidx.test.ext:junit:$version_androidXTestExtKotlinRunner"

    // AndroidX Test - Instrumented testing
    androidTestImplementation "androidx.test.ext:junit:$version_androidXTestExtKotlinRunner"
    androidTestImplementation "androidx.test.espresso:espresso-core:$version_espresso"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$version_espresso"

}
